# Coding
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> wrapList = new LinkedList<List<Integer>>();
         if(root == null){
         return wrapList;
        }
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.offer(root);
        while(!queue.isEmpty()){
              List<Integer>l=new ArrayList<>();
            int size=queue.size();
            System.out.println();
            for(int i=1;i<=size;i++){
               TreeNode curr = queue.poll();
           l.add(curr.val);
            if(curr.left!=null){
                System.out.println(curr.left.val +" ");
                queue.add(curr.left);
            }
             if(curr.right!=null){
                System.out.println(curr.right.val +" ");
                queue.add(curr.right); } 
            }
            wrapList.add(l);
          }
            return wrapList;
    }
}
